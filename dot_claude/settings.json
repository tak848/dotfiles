{
   "env": {
      "BASH_DEFAULT_TIMEOUT_MS": "600000",
      "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": "1",
      "DISABLE_AUTOUPDATER": "1",
      "MAX_MCP_OUTPUT_TOKENS": "100000",
      "MCP_TIMEOUT": "600000",
      "MCP_TOOL_TIMEOUT": "600000",
      "USE_BUILTIN_RIPGREP": "1"
   },
   "hooks": {
      "Notification": [
         {
            "hooks": [
               {
                  "command": "uv run ~/.claude/notification.py",
                  "type": "command"
               }
            ],
            "matcher": ""
         }
      ],
      "PostToolUse": [
         {
            "hooks": [
               {
                  "command": "jq -r '.tool_input.file_path | select(endswith(\".go\"))' | xargs -r gofmt -w",
                  "type": "command"
               }
            ],
            "matcher": "Write|Edit|MultiEdit"
         },
         {
            "hooks": [
               {
                  "command": "uv run ~/.claude/post_tool_use.py",
                  "type": "command"
               }
            ],
            "matcher": ""
         }
      ],
      "PreToolUse": [ ],
      "Stop": [
         {
            "hooks": [
               {
                  "command": "uv run ~/.claude/stop.py",
                  "type": "command"
               }
            ],
            "matcher": ""
         }
      ]
   },
   "model": "claude-opus-4-1-20250805",
   "permissions": {
      "allow": [
         "List(*)",
         "Bash(ls:*)",
         "Bash(cp:*)",
         "Bash(mkdir:*)",
         "Bash(curl:*)",
         "Bash(touch:*)",
         "Bash(lsof:*)",
         "Bash(awk:*)",
         "Bash(sed:*)",
         "Bash(wget:*)",
         "Bash(ps:*)",
         "Bash(top:*)",
         "Bash(which:*)",
         "Bash(find:*)",
         "Bash(grep:*)",
         "Bash(rg:*)",
         "Fetch(https://*)",
         "WebFetch(https://*)",
         "Bash(pnpm:*)",
         "Bash(make:*)",
         "Bash(sed:*)",
         "Bash(true)",
         "Bash(echo:*)",
         "Bash(go test:*)",
         "Bash(go build:*)",
         "Bash(go fmt:*)",
         "Bash(go doc:*)",
         "Bash(gofmt:*)",
         "Bash(gh pr list:*)",
         "Bash(gh pr view:*)",
         "Bash(gh pr diff:*)",
         "Bash(gh issue create:*)",
         "Bash(gh issue edit:*)",
         "Bash(git checkout:*)",
         "Bash(git add:*)",
         "Bash(git push:*)",
         "Bash(git remote set-url:*)",
         "Bash(git pull:*)",
         "Bash(git reset:*)",
         "Bash(git cherry-pick:*)",
         "Bash(docker compose ps:*)",
         "mcp__playwright__browser_navigate",
         "mcp__playwright__browser_type",
         "mcp__playwright__browser_click",
         "mcp__playwright__browser_wait_for",
         "mcp__playwright__browser_take_screenshot",
         "mcp__playwright__browser_press_key",
         "mcp__playwright__browser_console_messages",
         "mcp__playwright__browser_snapshot",
         "mcp__playwright__browser_tab_list",
         "mcp__playwright__browser_resize",
         "mcp__o3__o3-search",
         "mcp__gemini-cli__googleSearch",
         "mcp__serena-global__get_symbols_overview",
         "mcp__serena-global__find_symbol",
         "mcp__serena-global__find_referencing_symbols",
         "mcp__serena-global__list_dir",
         "mcp__serena-global__find_file",
         "mcp__serena-global__search_for_pattern",
         "mcp__serena-global__list_memories",
         "mcp__serena-global__write_memory",
         "mcp__serena-global__read_memory",
         "mcp__serena-global__delete_memory",
         "mcp__serena-global__check_onboarding_performed",
         "mcp__serena-global__onboarding",
         "mcp__serena-global__think_about_collected_information",
         "mcp__serena-global__think_about_task_adherence",
         "mcp__serena-global__think_about_whether_you_are_done"
      ],
      "defaultMode": "plan",
      "deny": [ ]
   }
}
